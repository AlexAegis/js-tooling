import type { Argv } from 'yargs';
import type { DistributeOptions } from './distribute-file.function.options.js';
//
export const addDistributeOptionsToYargs = (
	yargs: Argv
): Argv<Omit<DistributeOptions, 'logger'>> => {
	return yargs
		.positional('cwd', {
			string: true,
			default: process.cwd(),
			description:
				'The folder where a workspace is searched for, can be anywhere inside ' +
				'a workspace, the last package.json up the directory tree will mark the ' +
				'root of the workspace.',
		})
		.option('force', {
			boolean: true,
			default: false,
			description: "Always overwrite target files even if it's occupied or non-autogenerated",
		})
		.option('dry', {
			boolean: true,
			default: false,
			description: "Don't actually do anything just log",
		})
		.option('symlinkInsteadOfCopy', {
			boolean: true,
			default: false,
			description: 'Instead of copying file, just symlink them.',
		})
		.option('skipWorkspaceRoot', {
			boolean: true,
			default: false,
			description: "Don't distribute to the root of the workspace",
		})
		.option('onlyWorkspaceRoot', {
			boolean: true,
			default: false,
			description:
				'Only distribute to the root of the workspace. (Skip all workspace packages)',
		})
		.option('dependencyCriteria', {
			default: [],
			coerce: (v) => v as string[],
			type: 'array',
			description:
				'Only distribute to workspace packages that have this dependency listed ' +
				'in their package.json file. Empty means no filtering is applied.',
		});
};
